/*
问题描述
蓝桥杯官方近日收到了一份神秘的包裹，里面包含一个 U 盘和一张纸条，纸条上仅写有一个由小写字母组成的字符串 S。
经过初步检查，U盘内存储的内容似乎与即将到来的蓝桥杯大赛有关，但 U 盘被加密，无法直接访问。
根据情报提供方的提示，U盘的密码与字符串 S 中特定子序列的出现次数密切相关。

具体来说，密码等于字符串 S 中子序列 lan 的出现次数。这里的子序列是指从字符串 S 中按顺序选取字符（不一定连续）组成的新字符串。

为了帮助蓝桥杯官方顺利解开 U 盘的密码，你需要编写一个程序，计算字符串 S 中子序列 lan 的出现次数。

输入格式
输入为一个由小写字母组成的字符串 S，长度不超过 10^5 。

输出格式
输出一个整数，表示字符串 S 中子序列 lan 的出现次数。

输入样例
lanlan

输出样例
4

说明
在字符串 lanlan 中，子序列 lan 出现了 4 次。具体来说，可以选取以下位置的字符：

第1、2、3 个字符（l, a, n）
第1、2、6个字符（l, a, n）
第1、5、6 个字符（l, a, n）
第4、5、6 个字符（l, a, n）*/
#include <iostream>
#include <string>
using namespace std;
int main()
{
    string s;
    long long l = 0, la = 0, lan = 0;
    cin >> s;
    for (int i = 0; i < s.size(); i++)
    {
        if (s[i] == 'l') l++;
        else if (s[i] == 'a') la = la + l;
        else if (s[i] == 'n') lan = lan + la;
    }
    cout << lan << '\n';
    return 0;
}
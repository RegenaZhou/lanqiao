/*
问题描述
蓝桥杯大赛最近新增了一项娱乐比赛——口算大赛，目的是测试选手的口算能力。

比赛规则如下：

初始给定一个长度为 N 的数组 A，其中第 i 个数字为 Ai 。

随后数组会被隐藏，并进行 Q 次值域变换操作。

每次操作给出两个数字 L,R (1≤L≤R≤N)，表示对子数组 [L,R] 进行如下变换：

AL 增加 L。

AL+1 减少 L+1。

AL+2 增加L+2。

AL+3 减少L+3。

以此类推，直到 R。

在所有操作完成后，选手需要快速计算出最终的数组之和，最快回答出正确答案的选手将会获得奖励，请你尝试解决这个问题。

输入格式
第一行输入两个整数N,Q(1≤N,Q≤10^5) 表示数组长度和值域变换操作次数。

第二行输入 N 个整数A1,A2,A3,⋯,AN(1≤Ai≤10^5) 表示数组的初始值。

接下来 Q 行，每行两个整数 L,R(1≤L≤R≤N) 表示一次值域变换操作。

输出格式
输出一个整数，表示值域变换操作完毕后数组之和。

输入样例
5 2
1 2 3 4 5
1 3
4 5

输出样例
16

说明
初始时数组为 [1,2,3,4,5]，经过第 1 次值域变换操作后数组变为 [2,0,6,4,5]，
经过第 2 次值域变换后数组变为 [2,0,6,8,0]，最终数组之和为 16。*/
#include <iostream>
using namespace std;
int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int n, q, num;
    int l, r;
    long long ans = 0;
    cin >> n >> q;
    for (int i = 1; i <= n; i++)
    {
        cin >> num;
        ans += num;
    }
    for (int i = 1; i <= q; i++)
    {
        cin >> l >> r;
        if ((r - l) % 2 == 0)
        {
            ans = ans - (r - l) / 2 + r;
        }
        else
        {
            ans -= (r - l + 1) / 2;
        }
    }
    cout << ans << '\n';
    return 0;
}
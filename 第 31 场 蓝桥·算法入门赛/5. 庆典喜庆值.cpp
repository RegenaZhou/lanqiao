/*
问题描述
小蓝作为国庆庆典的总策划，正对着面前一张巨大的进度表，计算着整个城市为期 N 天能产生的总“喜庆值”。
庆典的筹备工作将从第 1 天一直持续到第 N 天。

根据往年的数据模型，小蓝发现，在筹备期间的第 i 天（天数从 1 开始计数），当天产生的“喜庆值”由以下三部分构成：

基础喜庆值：无论在哪一天，都会有 1 点的基础喜庆值。
过节喜庆值：随着节日一天天临近，街上的装饰和活动也愈发丰富，市民的参与感和期待感与日俱增。这份由节日氛围带来的喜庆值，其大小等于当天天数 i 的 3 倍。
放假喜庆值：伴随节日而来的假期，人们产生了对休闲时光的遐想和计划。这份因假期效应而产生的幸福感，其大小等于当天天数 i 的平方的 3 倍。
因此，在第 i 天，能够获得的总喜庆值就是这三个部分的总和。

小蓝的目标是计算从第 1 天到第 N 天，这 N 天内累计产生的总喜庆值是多少。现在，请你帮助小蓝完成计算。
这个数值可能会非常巨大，所以你只要给出答案对 998244353 取模后的结果。

输入格式
第一行包含一个整数 T（1≤T≤10^5），表示测试数据的组数。

接下来 T 行，每行包含一个整数 N（1≤N≤10^9）。

输出格式
输出共 T 行，每行一个整数，表示从第 1 天到第 N 天累计的总喜庆值对 998244353 取模后的结果。

样例输入
1
2

样例输出
26

样例说明
筹备工作共两天：第 1 天和第 2 天。

第 1 天的喜庆值 = 1+3×1+3×1^2=7
第 2 天的喜庆值 = 1+3×2+3×2^2=1+3+3=19
总喜庆值 = 7+19=26。*/
#include <iostream>
using namespace std;
using ll = long long;
const ll mood = 998244353;
void solve()
{
    ll n, ans = 0, zj = 0, num;
    cin >> n;
    num = (n + 1) % mood;
    ans = (num * num) % mood;
    ans = (ans * num) % mood;
    ans = (ans - 1 + mood) % mood;
    cout << ans << '\n';
}
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}
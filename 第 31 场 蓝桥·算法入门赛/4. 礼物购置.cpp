/*
问题描述
为了庆祝国庆节，蓝桥学院的领导们慷慨解囊，决定为两个程序设计班―― A 班和 B 班――采购大批礼品，让同学们 high 翻天！经费充裕，礼品数量上不封顶。

但领导们设置了一个有趣的“数学关卡”：假如 A 班分到 x 件礼品，B 班分到 y 件，那么必须满足 x×y=n，否则不算数。

A 班和 B 班的同学们都超级兴奋，计划拿到礼品后一起狂欢庆祝国庆。他们希望总礼品数越多越好（也就是 x+y 最大化），
但两个班都有个小迷信：谁都不想自己的礼品数量正好是 10 的倍数（比如 10、20、30），觉得那样会 “运气不佳”。

请问，在满足所有这些条件的情况下，两个班最多能分到多少件礼品？

输入格式
第一行包含一个整数 t（1≤t≤10^5），表示测试用例的数量。

接下来 t 行，每行包含一个整数 n（1≤n≤10^18），表示礼品总数的约束条件。

输出格式
对于每个测试用例，输出一行表示答案。

样例输入
3
12
100
21

样例输出
13
29
22*/
// 唯一质因数分解定理
// 假设一个数字的唯一分解定理形式：有x个2，y个5，那么它的末尾0的个数为 min(x,y)
// 拆成3部分：全部的2，全部的5，以及剩余的
#include <iostream>
using namespace std;
using ll = long long;
void solve()
{
    ll m, ans = 0;
    cin >> m;
    if (m % 10 != 0) ans = m + 1;
    else
    {
        ll c2 = 0, c5 = 0;
        ll m1 = m;
        while (m1 % 2 == 0)
        {
            c2++;
            m1 /= 2;
        }
        while (m1 % 5 == 0)
        {
            c5++;
            m1 /= 5;
        }
        ll powc2 = pow(2, c2), powc5 = pow(5, c5);
        ll k = m / powc2 / powc5;
        ans = max(powc2 + powc5 * k, powc5 + powc2 * k);
    }
    cout << ans << '\n';
}
int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}
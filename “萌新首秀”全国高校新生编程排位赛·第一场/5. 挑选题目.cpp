/*
问题描述
两位资深的审题专家，小蓝和小桥，各自收到了 N 道题目。小蓝收到的题目难度依次为 A1,A2,…AN，小桥收到的题目难度依次为 B1,B2,…,BN。

为了准备即将举行的竞赛，他们需要从各自收到的题目中选出一道，用于竞赛。
通过商量，两人决定通过一种特殊的方式来选择题目：两人轮流删除一道自己手中的题目，直到各自只剩下一道题目。
小蓝先删除，然后小桥删除，依此交替进行，直到最后两人手中都只剩下一道题目。

小蓝希望最终两人剩下的两道题目的难度差尽可能大，而小桥则希望难度差尽可能小。假设两人都采取最优策略，请问最终两人剩下的两道题目的难度差的绝对值是多少？

输入格式
第一行包含一个整数 N (1≤N≤1000)，表示每人初始的题目数量；
第二行包含 N 个整数 A1,A2,…,AN（1≤Ai≤10^3），表示小蓝收到的题目难度；
第三行包含 N 个整数 B1,B2,…,BN（1≤Bi≤10^3），表示小桥收到的题目难度。
输出格式
输出一个整数，表示在双方均采取最优策略下，最终两道题目的难度差的绝对值。

样例输入
2
1 10
2 20

样例输出
8

样例说明
在双方都采取最优策略的情况下，小蓝会优先删除难度为 1 的题目，随后，小桥会删除难度为 20 的题目。最终剩下的两道题目的难度差的绝对值为∣10−2∣=8。*/
#include <iostream>
#include <vector>
using namespace std;
int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int n, ans = 0;
    cin >> n;
    vector<int> a(n), b(n);
    for (int i = 0; i < n; i++) cin >> a[i];
    for (int i = 0; i < n; i++) cin >> b[i];
    sort(a.begin(), a.end());
    sort(b.begin(), b.end());
    for (int i = 0; i < n; i++)
    {
        int cnt = INT_MAX;
        for (int j = 0; j < n; j++)
        {
            cnt = min(cnt, abs(a[i] - b[j]));
        }
        ans = max(ans, cnt);
    }
    cout << ans << '\n';
    return 0;
}
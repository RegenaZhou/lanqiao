/*
问题描述
小蓝是个挑食但又容易饿的孩子。午餐时间，妈妈为他准备了 10 道菜，并写下了一份菜单。
菜单上的每道菜都有一个“饱腹值”，表示吃下这道菜能增加多少饱腹感。

妈妈会严格按照菜单的顺序，从第一道菜开始逐一端上餐桌。小蓝可以选择吃或不吃当前这道菜。
然而，一旦他决定不吃某一道菜，妈妈就会认为他已经吃饱了，并停止端上后续的所有菜肴。

小蓝虽然容易饿，但也不喜欢吃得太撑的感觉。因此，他希望午餐后自己的饱腹值能停留在 100 附近。

现在，请你根据小蓝的情况计算，他最终会获得的饱腹值是多少。

注意：如果存在两种选择，它们与 100 的差距相同（例如，饱腹值为 98 和 102），
他总是会选择那个更高的值——毕竟，对于一个正在长身体的孩子来说，吃撑一点总比饿着肚子好。

输入格式
输入一行，包含 10 个正整数，范围在 1∼100 之间，代表菜单上 10 道菜的饱腹值。

输出格式
输出一个整数，表示小蓝最终会获得的饱腹值。

样例输入
20 10 10 10 10 10 10 10 15 15

样例输出
105*/
#include <iostream>
#include <vector>
using namespace std;
int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int sum = 0;
    bool flag = true;
    vector<int> sz(10);
    for (int i = 0; i < 10; i++) cin >> sz[i];
    for (int i = 0; i < 10; i++)
    {
        sum += sz[i];
        if (sum >= 100)
        {
            cout << (abs(sum - 100) > abs(sum - sz[i] - 100) ? sum - sz[i] : sum);
            flag = false;
            break;
        }
    }
    if (flag) cout << sum;
    return 0;
}
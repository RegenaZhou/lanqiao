/*
问题描述
在一次盛大的星座大会上，各星座代表聚集在一起，
讨论如何管理他们的星座力量。每个星座代表都有一个整数值，
代表他们的力量，记为x。

现在，他们面临一个挑战：需要将x转换为0。
可以通过以下两种操作来改变这个整数：
1.将x增加1（即x+1）。
2.将x 改为x&(x+1)（按位与操作）。

星座代表们希望找到将x 转换为0所需的最小操作次数，请你帮助他们计算。

输入格式
输入一行一个整数x(1≤x≤10^6 )。

输出格式
输出一个整数，表示将x转换为0所需的最小操作次数。

样例输入
5

样例输出
3

说明
在给定的样例中，整数5可以通过以下步骤转换为0：
1.5→6 (增加1)
2.6→7 (增加1)
3.7→0 (按位与操作)
因此，总共需要3次操作。*/
#include <iostream>
#include <cmath>
using namespace std;
int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int x;
    cin >> x;
    int i = 0;
    while (pow(2, i) < x)
    {
        i++;
    }
    cout << pow(2, i) - x << '\n';
    return 0;
}
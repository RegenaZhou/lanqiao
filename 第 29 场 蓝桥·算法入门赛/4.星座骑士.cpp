/*
问题描述
在一次盛大的十二星座大会上，各星座代表齐聚一堂，
共同商议组建一支星座守护军队，以应对可能出现的突发情况。
这支军队不仅需要强大的战斗力，还需要有卓越的领导才能。
经过严格的选拔，最终从十二星座中挑选出了N位星座骑士，
他们各自展现出独特的能力值，记为Ai 。

为了确保军队的高效运作，会议决定选出两位星座骑士作为左右统帅。
然而，统帅的选择并非随意，而是有着特殊的要求：
这两位统帅的能力值之和必须与剩余骑士的能力值之和保持相同的奇偶性。
这一规定旨在确保军队在战斗时的稳定性，避免潜在的混乱和冲突。

请你帮忙计算一下最终能选出多少种符合条件的统帅组合。

输入格式
第一行输入一个整数N（2≤N≤10^5），表示星座骑士的数量。

第二行输入N个整数A1,A2,…,AN​（1≤Ai≤10^9），表示每位星座骑士的能力值。

输出格式
输出一个整数，表示符合条件的统帅组合的数量。

样例输入
5
3 4 4 6 7

样例输出
10*/
#include <iostream>
using namespace std;
int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    long n, sum = 0, num;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> num;
        num %= 2;
        sum += num;
    }
    if (sum % 2 == 1)
    {
        cout << 0 << '\n';
    }
    else
    {
        cout << n * (n - 1) / 2 << '\n';
    }
    return 0;
}
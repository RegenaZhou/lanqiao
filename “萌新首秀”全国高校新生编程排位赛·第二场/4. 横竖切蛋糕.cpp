/*
问题描述
为了即将到来的蓝桥派对，小蓝准备了一个巨大的矩形蛋糕。他想把这个蛋糕切成尽可能多的块，以便分给更多的朋友。

小蓝手头有一把长刀，他总共可以切 N 刀。他的切法有如下规则：

每一刀要么是“横切”（平行于蛋糕的某两条边），要么是“竖切”（与横切垂直）。
每一刀都必须笔直地从蛋糕的一条边切到其相对的另一条边。
现在，小蓝想知道，如何合理地分配这 N 刀（即决定多少刀用于横切，多少刀用于竖切），才能使得最终得到的蛋糕块数量最多？请你帮助他计算出这个最大数量。

输入格式
输入的第一行包含一个整数 N（1≤N≤10^4），表示小蓝可以切的总刀数。

输出格式
输出一个整数，表示能够切出的最大蛋糕块数量。

样例输入
2

样例输出
4*/
#include <iostream>
using namespace std;
int main()
{
	ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	int n, ans;
	cin >> n;
	if (n % 2 == 0) ans = (n / 2 + 1) * (n / 2 + 1);
	else ans = (n / 2 + 1) * (n / 2 + 2);
	cout << ans << '\n';
	return 0;
}